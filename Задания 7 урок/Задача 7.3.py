# Реализовать программу работы с органическими клетками. Необходимо создать класс Клетка. В его конструкторе инициализировать параметр,
# соответствующий количеству клеток (целое число). В классе должны быть реализованы методы перегрузки арифметических операторов:
# сложение (__add__()), вычитание (__sub__()), умножение (__mul__()), деление (__truediv__()).
# Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение, умножение и обычное (не целочисленное)
# деление клеток, соответственно. В методе деления должно осуществляться округление значения до целого числа.
# Сложение. Объединение двух клеток. При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
# Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля,
# иначе выводить соответствующее сообщение.
# Умножение. Создается общая клетка из двух. Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
# Деление. Создается общая клетка из двух. Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.
# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду. Данный метод позволяет организовать ячейки по рядам.
# Метод должен возвращать строку вида *****\n*****\n*****..., где количество ячеек между \n равно переданному аргументу.
# Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
# Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5. Тогда метод make_order() вернет строку: *****\n*****\n**.
# Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5. Тогда метод make_order() вернет строку: *****\n*****\n*****.


class Cell:
    def __init__(self, amount_cell, other_cell):
        self.amount_cell = amount_cell
        self.other_cell = other_cell

    def __add__(self):
        return print("Результат сложения - ", self.amount_cell + self.other_cell)

    def __sub__(self):
        if self.amount_cell > self.other_cell:
            return print("Результат вычитания - ", self.amount_cell - self.other_cell)
        else:
            print("Вычитание приведет к нулю или отрицательному числу")

    def __mul__(self):
        return print("Результат перемножения - ", self.amount_cell * self.other_cell)

    def __truediv__(self):
        if self.amount_cell > self.other_cell:
            return print("Результат деления - ", self.amount_cell//self.other_cell)
        else:
            print("Деление приведет к нулю")

    def __make_order__(self, cell_in_row):
        i = self.amount_cell // cell_in_row
        j = self.amount_cell % cell_in_row
        while i > 0:
            print("*" * cell_in_row + "\\n", end='')
            i -= 1
        print("*" * j)


a = Cell(17, 9)
a.__add__()
a.__sub__()
a.__mul__()
a.__truediv__()
a.__make_order__(5)

